name: Compare Screenshots

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 10 * * *'
  
env:
  PER_PAGE: 2

jobs:
  take-screenshots:
    name: Take Screenshots
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # if all examples are not built, add a new page here
        page: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        os: [ubuntu-latest, windows-latest]

    steps:

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-examples-stable-${{ hashFiles('**/Cargo.toml') }}

      - name: Checkout Bevy main branch
        uses: actions/checkout@master
        with:
          repository: 'bevyengine/bevy'
          ref: 'main'

      # temporary: fetch tools from PR
      - name: Checkout Bevy Tools
        uses: actions/checkout@master
        with:
          repository: 'mockersf/bevy'
          ref: 'example-showcase-can-remove-desktop-mode'
          path: 'bevy-tools'
      - name: Copy Bevy tools to main
        run: |
          rm -r tools
          cp -r bevy-tools/tools/ tools

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Bevy dependencies
        if: runner.os == 'linux'
        run: |
          sudo apt-get update;
          DEBIAN_FRONTEND=noninteractive sudo apt-get install --no-install-recommends -yq \
            libasound2-dev libudev-dev;

      - name: install xvfb, llvmpipe and lavapipe
        if: runner.os == 'linux'
        run: |
          sudo apt-get update -y -qq
          sudo add-apt-repository ppa:oibaf/graphics-drivers -y
          sudo apt-get update
          sudo apt install -y xvfb libegl1-mesa libgl1-mesa-dri libxcb-xfixes0-dev mesa-vulkan-drivers

      - name: Take Screenshots
        if: runner.os == 'linux'
        run: |
          xvfb-run cargo run -p example-showcase -- --page ${{ matrix.page }} --per-page ${{ env.PER_PAGE }} run --screenshot --in-ci --ignore-stress-tests

      - name: Take Screenshots
        if: runner.os == 'windows'
        run: |
          cargo run -p example-showcase -- --page ${{ matrix.page }} --per-page ${{ env.PER_PAGE }} run --screenshot --in-ci --ignore-stress-tests

      - name: Upload Generated Files
        uses: actions/upload-artifact@v3
        with:
          name: screenshots-${{ runner.os }}-${{ matrix.page }}
          path: screenshots

      - name: Reduce cache size
        run: rm -rf target/release/examples

  send-linux-to-percy:
    name: Send Linux screenshots to Percy
    runs-on: ubuntu-latest
    needs: take-screenshots
    steps:
      
      - name: Clone bevy-website repo
        uses: actions/checkout@master

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Move examples to the correct folder
        run: |
          mkdir screenshots-linux
          for screenshotfolder in screenshots-linux-*
          do
            echo $screenshotfolder
            rsync --verbose --archive $screenshotfolder/* screenshots-linux/
            rm -rf $screenshotfolder
          done

      - name: Send to Percy
        run: |
          npm install -g @percy/cli@latest
          npx percy upload screenshots-linux
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_LINUX_VULKAN }}

  send-windows-to-percy:
    name: Send Windows screenshots to Percy
    runs-on: ubuntu-latest
    needs: take-screenshots
    steps:
      
      - name: Clone bevy-website repo
        uses: actions/checkout@master

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Move examples to the correct folder
        run: |
          mkdir screenshots-windows
          for screenshotfolder in screenshots-windows-*
          do
            echo $screenshotfolder
            rsync --verbose --archive $screenshotfolder/* screenshots-windows/
            rm -rf $screenshotfolder
          done

      - name: Send to Percy
        run: |
          npm install -g @percy/cli@latest
          npx percy upload screenshots-windows
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_WINDOWS_DX12 }}
      